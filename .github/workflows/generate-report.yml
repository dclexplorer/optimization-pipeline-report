name: Generate and Deploy Report

on:
  schedule:
    # Run every 24 hours at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches:
      - main

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Generate report
        env:
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_REGION: ${{ secrets.S3_REGION }}
        run: |
          mkdir -p reports
          npm start
      
      - name: Upload report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: optimization-report
          path: reports/*.html
          retention-days: 7
      
      - name: Get artifact URL and upload to Vercel
        env:
          VERCEL_URL: ${{ secrets.VERCEL_URL }}
          UPLOAD_SECRET: ${{ secrets.UPLOAD_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Find the most recent report
          LATEST_REPORT=$(ls -t reports/*.html | head -1)
          
          if [ -f "$LATEST_REPORT" ]; then
            echo "üì§ Preparing to upload report to Vercel..."
            echo "Report size: $(du -h "$LATEST_REPORT" | cut -f1)"
            
            # Upload the file to transfer.sh for temporary hosting (expires in 1 day)
            echo "Uploading to temporary storage..."
            UPLOAD_URL=$(curl --upload-file "$LATEST_REPORT" "https://transfer.sh/report-$(date +%s).html" 2>/dev/null)
            
            if [ -z "$UPLOAD_URL" ]; then
              echo "‚ùå Failed to upload to temporary storage"
              exit 1
            fi
            
            echo "Temporary URL: $UPLOAD_URL"
            
            TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            
            # Send just the URL to Vercel
            RESPONSE=$(curl -X POST \
              "${VERCEL_URL}/api/upload-report" \
              -H "Content-Type: application/json" \
              -H "X-Auth-Token: ${UPLOAD_SECRET}" \
              -d "{\"url\": \"$UPLOAD_URL\", \"timestamp\": \"$TIMESTAMP\"}" \
              -w "\nHTTP_STATUS:%{http_code}")
            
            HTTP_STATUS=$(echo "$RESPONSE" | grep "HTTP_STATUS" | cut -d: -f2)
            BODY=$(echo "$RESPONSE" | grep -v "HTTP_STATUS")
            
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "‚úÖ Report uploaded successfully!"
              echo "Response: $BODY"
            else
              echo "‚ùå Failed to upload report. Status: $HTTP_STATUS"
              echo "Response: $BODY"
              exit 1
            fi
          else
            echo "‚ùå No report found!"
            exit 1
          fi